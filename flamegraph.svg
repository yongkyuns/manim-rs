<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;
var truncate_text_right = false;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="821.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="821.00"> </text><svg id="frames" x="10" width="1180"><g><title>libsystem_kernel.dylib`__workq_kernreturn (28 samples, 0.43%)</title><rect x="0.0913%" y="757" width="0.4259%" height="15" fill="rgb(227,0,7)"/><text x="0.3413%" y="767.50"></text></g><g><title>QuartzCore`__CAImageQueueInsertImageImpl_block_invoke (8 samples, 0.12%)</title><rect x="0.7301%" y="661" width="0.1217%" height="15" fill="rgb(217,0,24)"/><text x="0.9801%" y="671.50"></text></g><g><title>IOSurface`IOSurfaceClientBindAccel (8 samples, 0.12%)</title><rect x="0.7301%" y="645" width="0.1217%" height="15" fill="rgb(221,193,54)"/><text x="0.9801%" y="655.50"></text></g><g><title>IOKit`IOConnectCallMethod (8 samples, 0.12%)</title><rect x="0.7301%" y="629" width="0.1217%" height="15" fill="rgb(248,212,6)"/><text x="0.9801%" y="639.50"></text></g><g><title>IOKit`io_connect_method (8 samples, 0.12%)</title><rect x="0.7301%" y="613" width="0.1217%" height="15" fill="rgb(208,68,35)"/><text x="0.9801%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (8 samples, 0.12%)</title><rect x="0.7301%" y="597" width="0.1217%" height="15" fill="rgb(232,128,0)"/><text x="0.9801%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (13 samples, 0.20%)</title><rect x="0.6693%" y="677" width="0.1977%" height="15" fill="rgb(207,160,47)"/><text x="0.9193%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (18 samples, 0.27%)</title><rect x="0.6085%" y="693" width="0.2738%" height="15" fill="rgb(228,23,34)"/><text x="0.8585%" y="703.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[AMD_MtlCmdQueue submitCommandBuffers:count:] (70 samples, 1.06%)</title><rect x="0.9279%" y="629" width="1.0648%" height="15" fill="rgb(218,30,26)"/><text x="1.1779%" y="639.50"></text></g><g><title>Metal`-[MTLIOAccelCommandQueue submitCommandBuffers:count:] (70 samples, 1.06%)</title><rect x="0.9279%" y="613" width="1.0648%" height="15" fill="rgb(220,122,19)"/><text x="1.1779%" y="623.50"></text></g><g><title>IOAccelerator`IOAccelCommandQueueSubmitCommandBuffers (70 samples, 1.06%)</title><rect x="0.9279%" y="597" width="1.0648%" height="15" fill="rgb(250,228,42)"/><text x="1.1779%" y="607.50"></text></g><g><title>IOKit`IOConnectCallMethod (70 samples, 1.06%)</title><rect x="0.9279%" y="581" width="1.0648%" height="15" fill="rgb(240,193,28)"/><text x="1.1779%" y="591.50"></text></g><g><title>IOKit`io_connect_method (70 samples, 1.06%)</title><rect x="0.9279%" y="565" width="1.0648%" height="15" fill="rgb(216,20,37)"/><text x="1.1779%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (70 samples, 1.06%)</title><rect x="0.9279%" y="549" width="1.0648%" height="15" fill="rgb(206,188,39)"/><text x="1.1779%" y="559.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (72 samples, 1.10%)</title><rect x="0.9279%" y="645" width="1.0952%" height="15" fill="rgb(217,207,13)"/><text x="1.1779%" y="655.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (7 samples, 0.11%)</title><rect x="2.1296%" y="581" width="0.1065%" height="15" fill="rgb(231,73,38)"/><text x="2.3796%" y="591.50"></text></g><g><title>IOAccelerator`ioAccelCommandQueueBlockFenceCallback (10 samples, 0.15%)</title><rect x="2.0992%" y="597" width="0.1521%" height="15" fill="rgb(225,20,46)"/><text x="2.3492%" y="607.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (17 samples, 0.26%)</title><rect x="2.0840%" y="629" width="0.2586%" height="15" fill="rgb(210,31,41)"/><text x="2.3340%" y="639.50"></text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (17 samples, 0.26%)</title><rect x="2.0840%" y="613" width="0.2586%" height="15" fill="rgb(221,200,47)"/><text x="2.3340%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (118 samples, 1.79%)</title><rect x="0.5628%" y="709" width="1.7949%" height="15" fill="rgb(226,26,5)"/><text x="0.8128%" y="719.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (94 samples, 1.43%)</title><rect x="0.9279%" y="693" width="1.4299%" height="15" fill="rgb(249,33,26)"/><text x="1.1779%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (94 samples, 1.43%)</title><rect x="0.9279%" y="677" width="1.4299%" height="15" fill="rgb(235,183,28)"/><text x="1.1779%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (94 samples, 1.43%)</title><rect x="0.9279%" y="661" width="1.4299%" height="15" fill="rgb(221,5,38)"/><text x="1.1779%" y="671.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (19 samples, 0.29%)</title><rect x="2.0688%" y="645" width="0.2890%" height="15" fill="rgb(247,18,42)"/><text x="2.3188%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (120 samples, 1.83%)</title><rect x="0.5628%" y="725" width="1.8254%" height="15" fill="rgb(241,131,45)"/><text x="0.8128%" y="735.50">l..</text></g><g><title>libsystem_pthread.dylib`start_wqthread (155 samples, 2.36%)</title><rect x="0.0608%" y="773" width="2.3578%" height="15" fill="rgb(249,31,29)"/><text x="0.3108%" y="783.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (125 samples, 1.90%)</title><rect x="0.5172%" y="757" width="1.9014%" height="15" fill="rgb(225,111,53)"/><text x="0.7672%" y="767.50">l..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (124 samples, 1.89%)</title><rect x="0.5324%" y="741" width="1.8862%" height="15" fill="rgb(238,160,17)"/><text x="0.7824%" y="751.50">l..</text></g><g><title>manim_rs`wgpu_native::instance::wgpu_create_surface (9 samples, 0.14%)</title><rect x="2.5403%" y="629" width="0.1369%" height="15" fill="rgb(214,148,48)"/><text x="2.7903%" y="639.50"></text></g><g><title>manim_rs`gfx_backend_metal::Instance::create_surface_from_nsview (9 samples, 0.14%)</title><rect x="2.5403%" y="613" width="0.1369%" height="15" fill="rgb(232,36,49)"/><text x="2.7903%" y="623.50"></text></g><g><title>QuartzCore`-[CAMetalLayer init] (9 samples, 0.14%)</title><rect x="2.5403%" y="597" width="0.1369%" height="15" fill="rgb(209,103,24)"/><text x="2.7903%" y="607.50"></text></g><g><title>QuartzCore`CAMetalContextCreate (8 samples, 0.12%)</title><rect x="2.5555%" y="581" width="0.1217%" height="15" fill="rgb(229,88,8)"/><text x="2.8055%" y="591.50"></text></g><g><title>Metal`MTLCopyAllDevices (8 samples, 0.12%)</title><rect x="2.5555%" y="565" width="0.1217%" height="15" fill="rgb(213,181,19)"/><text x="2.8055%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (8 samples, 0.12%)</title><rect x="2.5555%" y="549" width="0.1217%" height="15" fill="rgb(254,191,54)"/><text x="2.8055%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (8 samples, 0.12%)</title><rect x="2.5555%" y="533" width="0.1217%" height="15" fill="rgb(241,83,37)"/><text x="2.8055%" y="543.50"></text></g><g><title>Metal`invocation function for block in MTLDeviceArrayInitialize() (8 samples, 0.12%)</title><rect x="2.5555%" y="517" width="0.1217%" height="15" fill="rgb(233,36,39)"/><text x="2.8055%" y="527.50"></text></g><g><title>AppKit`-[NSThemeFrame _moveTitlebarViewsToView:] (9 samples, 0.14%)</title><rect x="2.7837%" y="485" width="0.1369%" height="15" fill="rgb(226,3,54)"/><text x="3.0337%" y="495.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (9 samples, 0.14%)</title><rect x="2.7837%" y="469" width="0.1369%" height="15" fill="rgb(245,192,40)"/><text x="3.0337%" y="479.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (9 samples, 0.14%)</title><rect x="2.7837%" y="453" width="0.1369%" height="15" fill="rgb(238,167,29)"/><text x="3.0337%" y="463.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (9 samples, 0.14%)</title><rect x="2.7837%" y="437" width="0.1369%" height="15" fill="rgb(232,182,51)"/><text x="3.0337%" y="447.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (9 samples, 0.14%)</title><rect x="2.7837%" y="421" width="0.1369%" height="15" fill="rgb(231,60,39)"/><text x="3.0337%" y="431.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (9 samples, 0.14%)</title><rect x="2.7837%" y="405" width="0.1369%" height="15" fill="rgb(208,69,12)"/><text x="3.0337%" y="415.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (9 samples, 0.14%)</title><rect x="2.7837%" y="389" width="0.1369%" height="15" fill="rgb(235,93,37)"/><text x="3.0337%" y="399.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (11 samples, 0.17%)</title><rect x="2.7837%" y="533" width="0.1673%" height="15" fill="rgb(213,116,39)"/><text x="3.0337%" y="543.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (11 samples, 0.17%)</title><rect x="2.7837%" y="517" width="0.1673%" height="15" fill="rgb(222,207,29)"/><text x="3.0337%" y="527.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (11 samples, 0.17%)</title><rect x="2.7837%" y="501" width="0.1673%" height="15" fill="rgb(206,96,30)"/><text x="3.0337%" y="511.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (14 samples, 0.21%)</title><rect x="2.7533%" y="549" width="0.2130%" height="15" fill="rgb(218,138,4)"/><text x="3.0033%" y="559.50"></text></g><g><title>manim_rs`manim_rs::app::scene (37 samples, 0.56%)</title><rect x="2.4186%" y="661" width="0.5628%" height="15" fill="rgb(250,191,14)"/><text x="2.6686%" y="671.50"></text></g><g><title>manim_rs`nannou::window::Builder::build (35 samples, 0.53%)</title><rect x="2.4490%" y="645" width="0.5324%" height="15" fill="rgb(239,60,40)"/><text x="2.6990%" y="655.50"></text></g><g><title>manim_rs`winit::platform_impl::platform::window::UnownedWindow::new (20 samples, 0.30%)</title><rect x="2.6772%" y="629" width="0.3042%" height="15" fill="rgb(206,27,48)"/><text x="2.9272%" y="639.50"></text></g><g><title>manim_rs`&lt;*mut objc::runtime::Object as cocoa::appkit::NSWindow&gt;::initWithContentRect_styleMask_backing_defer_ (16 samples, 0.24%)</title><rect x="2.7381%" y="613" width="0.2434%" height="15" fill="rgb(225,35,8)"/><text x="2.9881%" y="623.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (16 samples, 0.24%)</title><rect x="2.7381%" y="597" width="0.2434%" height="15" fill="rgb(250,213,24)"/><text x="2.9881%" y="607.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (16 samples, 0.24%)</title><rect x="2.7381%" y="581" width="0.2434%" height="15" fill="rgb(247,123,22)"/><text x="2.9881%" y="591.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (15 samples, 0.23%)</title><rect x="2.7533%" y="565" width="0.2282%" height="15" fill="rgb(231,138,38)"/><text x="3.0033%" y="575.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (20 samples, 0.30%)</title><rect x="3.0879%" y="549" width="0.3042%" height="15" fill="rgb(231,145,46)"/><text x="3.3379%" y="559.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (20 samples, 0.30%)</title><rect x="3.0879%" y="533" width="0.3042%" height="15" fill="rgb(251,118,11)"/><text x="3.3379%" y="543.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (20 samples, 0.30%)</title><rect x="3.0879%" y="517" width="0.3042%" height="15" fill="rgb(217,147,25)"/><text x="3.3379%" y="527.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (20 samples, 0.30%)</title><rect x="3.0879%" y="501" width="0.3042%" height="15" fill="rgb(247,81,37)"/><text x="3.3379%" y="511.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (20 samples, 0.30%)</title><rect x="3.0879%" y="485" width="0.3042%" height="15" fill="rgb(209,12,38)"/><text x="3.3379%" y="495.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (20 samples, 0.30%)</title><rect x="3.0879%" y="469" width="0.3042%" height="15" fill="rgb(227,1,9)"/><text x="3.3379%" y="479.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (20 samples, 0.30%)</title><rect x="3.0879%" y="453" width="0.3042%" height="15" fill="rgb(248,47,43)"/><text x="3.3379%" y="463.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (20 samples, 0.30%)</title><rect x="3.0879%" y="437" width="0.3042%" height="15" fill="rgb(221,10,30)"/><text x="3.3379%" y="447.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (20 samples, 0.30%)</title><rect x="3.0879%" y="421" width="0.3042%" height="15" fill="rgb(210,229,1)"/><text x="3.3379%" y="431.50"></text></g><g><title>HIToolbox`ShowHide (18 samples, 0.27%)</title><rect x="3.1183%" y="405" width="0.2738%" height="15" fill="rgb(222,148,37)"/><text x="3.3683%" y="415.50"></text></g><g><title>HIToolbox`_ShowHideWindows (18 samples, 0.27%)</title><rect x="3.1183%" y="389" width="0.2738%" height="15" fill="rgb(234,67,33)"/><text x="3.3683%" y="399.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (17 samples, 0.26%)</title><rect x="3.1336%" y="373" width="0.2586%" height="15" fill="rgb(247,98,35)"/><text x="3.3836%" y="383.50"></text></g><g><title>HIToolbox`HIView::Render (17 samples, 0.26%)</title><rect x="3.1336%" y="357" width="0.2586%" height="15" fill="rgb(247,138,52)"/><text x="3.3836%" y="367.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (17 samples, 0.26%)</title><rect x="3.1336%" y="341" width="0.2586%" height="15" fill="rgb(213,79,30)"/><text x="3.3836%" y="351.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (17 samples, 0.26%)</title><rect x="3.1336%" y="325" width="0.2586%" height="15" fill="rgb(246,177,23)"/><text x="3.3836%" y="335.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (17 samples, 0.26%)</title><rect x="3.1336%" y="309" width="0.2586%" height="15" fill="rgb(230,62,27)"/><text x="3.3836%" y="319.50"></text></g><g><title>HIToolbox`HIView::SendDraw (17 samples, 0.26%)</title><rect x="3.1336%" y="293" width="0.2586%" height="15" fill="rgb(216,154,8)"/><text x="3.3836%" y="303.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (17 samples, 0.26%)</title><rect x="3.1336%" y="277" width="0.2586%" height="15" fill="rgb(244,35,45)"/><text x="3.3836%" y="287.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (17 samples, 0.26%)</title><rect x="3.1336%" y="261" width="0.2586%" height="15" fill="rgb(251,115,12)"/><text x="3.3836%" y="271.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (17 samples, 0.26%)</title><rect x="3.1336%" y="245" width="0.2586%" height="15" fill="rgb(240,54,50)"/><text x="3.3836%" y="255.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (17 samples, 0.26%)</title><rect x="3.1336%" y="229" width="0.2586%" height="15" fill="rgb(233,84,52)"/><text x="3.3836%" y="239.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawWithoutCustomization (17 samples, 0.26%)</title><rect x="3.1336%" y="213" width="0.2586%" height="15" fill="rgb(207,117,47)"/><text x="3.3836%" y="223.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (17 samples, 0.26%)</title><rect x="3.1336%" y="197" width="0.2586%" height="15" fill="rgb(249,43,39)"/><text x="3.3836%" y="207.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (15 samples, 0.23%)</title><rect x="3.1640%" y="181" width="0.2282%" height="15" fill="rgb(209,38,44)"/><text x="3.4140%" y="191.50"></text></g><g><title>HIToolbox`_HIThemeDrawAppleMenuTitle (13 samples, 0.20%)</title><rect x="3.1944%" y="165" width="0.1977%" height="15" fill="rgb(236,212,23)"/><text x="3.4444%" y="175.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithRenderer (13 samples, 0.20%)</title><rect x="3.1944%" y="149" width="0.1977%" height="15" fill="rgb(242,79,21)"/><text x="3.4444%" y="159.50"></text></g><g><title>HIToolbox`_HIThemeCUIDrawWithOptions (13 samples, 0.20%)</title><rect x="3.1944%" y="133" width="0.1977%" height="15" fill="rgb(211,96,35)"/><text x="3.4444%" y="143.50"></text></g><g><title>CoreUI`CUIDraw (13 samples, 0.20%)</title><rect x="3.1944%" y="117" width="0.1977%" height="15" fill="rgb(253,215,40)"/><text x="3.4444%" y="127.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (13 samples, 0.20%)</title><rect x="3.1944%" y="101" width="0.1977%" height="15" fill="rgb(211,81,21)"/><text x="3.4444%" y="111.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawMenuTitle (13 samples, 0.20%)</title><rect x="3.1944%" y="85" width="0.1977%" height="15" fill="rgb(208,190,38)"/><text x="3.4444%" y="95.50"></text></g><g><title>CoreUI`CUIRenderer::DrawImage (11 samples, 0.17%)</title><rect x="3.2248%" y="69" width="0.1673%" height="15" fill="rgb(235,213,38)"/><text x="3.4748%" y="79.50"></text></g><g><title>CoreUI`CUIRenderer::CreateImage (11 samples, 0.17%)</title><rect x="3.2248%" y="53" width="0.1673%" height="15" fill="rgb(237,122,38)"/><text x="3.4748%" y="63.50"></text></g><g><title>CoreUI`CUIRenderer::CreateImageByApplyingEffectsToImage (11 samples, 0.17%)</title><rect x="3.2248%" y="37" width="0.1673%" height="15" fill="rgb(244,218,35)"/><text x="3.4748%" y="47.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (7 samples, 0.11%)</title><rect x="3.4074%" y="501" width="0.1065%" height="15" fill="rgb(240,68,47)"/><text x="3.6574%" y="511.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (7 samples, 0.11%)</title><rect x="3.4074%" y="485" width="0.1065%" height="15" fill="rgb(210,16,53)"/><text x="3.6574%" y="495.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (7 samples, 0.11%)</title><rect x="3.5595%" y="405" width="0.1065%" height="15" fill="rgb(235,124,12)"/><text x="3.8095%" y="415.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (12 samples, 0.18%)</title><rect x="3.5443%" y="421" width="0.1825%" height="15" fill="rgb(224,169,11)"/><text x="3.7943%" y="431.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (19 samples, 0.29%)</title><rect x="3.5138%" y="469" width="0.2890%" height="15" fill="rgb(250,166,2)"/><text x="3.7638%" y="479.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (17 samples, 0.26%)</title><rect x="3.5443%" y="453" width="0.2586%" height="15" fill="rgb(242,216,29)"/><text x="3.7943%" y="463.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (17 samples, 0.26%)</title><rect x="3.5443%" y="437" width="0.2586%" height="15" fill="rgb(230,116,27)"/><text x="3.7943%" y="447.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (20 samples, 0.30%)</title><rect x="4.6547%" y="325" width="0.3042%" height="15" fill="rgb(228,99,48)"/><text x="4.9047%" y="335.50"></text></g><g><title>manim_rs`nannou::draw::Draw&lt;S&gt;::ellipse (43 samples, 0.65%)</title><rect x="4.3809%" y="341" width="0.6541%" height="15" fill="rgb(253,11,6)"/><text x="4.6309%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.11%)</title><rect x="5.0502%" y="325" width="0.1065%" height="15" fill="rgb(247,143,39)"/><text x="5.3002%" y="335.50"></text></g><g><title>manim_rs`nannou::draw::State&lt;S&gt;::finish_drawing (25 samples, 0.38%)</title><rect x="5.0350%" y="341" width="0.3803%" height="15" fill="rgb(236,97,10)"/><text x="5.2850%" y="351.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (17 samples, 0.26%)</title><rect x="5.1567%" y="325" width="0.2586%" height="15" fill="rgb(233,208,19)"/><text x="5.4067%" y="335.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.18%)</title><rect x="6.0542%" y="325" width="0.1825%" height="15" fill="rgb(216,164,2)"/><text x="6.3042%" y="335.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (17 samples, 0.26%)</title><rect x="6.2367%" y="325" width="0.2586%" height="15" fill="rgb(220,129,5)"/><text x="6.4867%" y="335.50"></text></g><g><title>manim_rs`nannou::draw::drawing::Drawing&lt;T,S&gt;::color (75 samples, 1.14%)</title><rect x="5.4153%" y="341" width="1.1409%" height="15" fill="rgb(242,17,10)"/><text x="5.6653%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.18%)</title><rect x="7.1798%" y="325" width="0.1825%" height="15" fill="rgb(242,107,0)"/><text x="7.4298%" y="335.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (20 samples, 0.30%)</title><rect x="7.4232%" y="325" width="0.3042%" height="15" fill="rgb(251,28,31)"/><text x="7.6732%" y="335.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (23 samples, 0.35%)</title><rect x="7.7274%" y="325" width="0.3499%" height="15" fill="rgb(233,223,10)"/><text x="7.9774%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.14%)</title><rect x="7.9404%" y="309" width="0.1369%" height="15" fill="rgb(215,21,27)"/><text x="8.1904%" y="319.50"></text></g><g><title>manim_rs`nannou::draw::drawing::Drawing&lt;T,S&gt;::stroke_weight (105 samples, 1.60%)</title><rect x="6.5561%" y="341" width="1.5972%" height="15" fill="rgb(232,23,21)"/><text x="6.8061%" y="351.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (17 samples, 0.26%)</title><rect x="8.6249%" y="325" width="0.2586%" height="15" fill="rgb(244,5,23)"/><text x="8.8749%" y="335.50"></text></g><g><title>manim_rs`nannou::draw::drawing::Drawing&lt;T,S&gt;::x_y (60 samples, 0.91%)</title><rect x="8.1533%" y="341" width="0.9127%" height="15" fill="rgb(226,81,46)"/><text x="8.4033%" y="351.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (12 samples, 0.18%)</title><rect x="8.8835%" y="325" width="0.1825%" height="15" fill="rgb(247,70,30)"/><text x="9.1335%" y="335.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (19 samples, 0.29%)</title><rect x="9.8722%" y="325" width="0.2890%" height="15" fill="rgb(212,68,19)"/><text x="10.1222%" y="335.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (15 samples, 0.23%)</title><rect x="10.1612%" y="325" width="0.2282%" height="15" fill="rgb(240,187,13)"/><text x="10.4112%" y="335.50"></text></g><g><title>manim_rs`nannou::draw::primitive::ellipse::_&lt;impl nannou::draw::drawing::Drawing&lt;nannou::draw::primitive::ellipse::Ellipse&lt;S&gt;,S&gt;&gt;::radius (91 samples, 1.38%)</title><rect x="9.0812%" y="341" width="1.3842%" height="15" fill="rgb(223,113,26)"/><text x="9.3312%" y="351.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::insert (25 samples, 0.38%)</title><rect x="10.9218%" y="325" width="0.3803%" height="15" fill="rgb(206,192,2)"/><text x="11.1718%" y="335.50"></text></g><g><title>manim_rs`hashbrown::raw::RawTable&lt;T&gt;::insert (12 samples, 0.18%)</title><rect x="11.1196%" y="309" width="0.1825%" height="15" fill="rgb(241,108,4)"/><text x="11.3696%" y="319.50"></text></g><g><title>manim_rs`hashbrown::map::HashMap&lt;K,V,S&gt;::remove (15 samples, 0.23%)</title><rect x="11.3021%" y="325" width="0.2282%" height="15" fill="rgb(247,173,49)"/><text x="11.5521%" y="335.50"></text></g><g><title>manim_rs`&lt;manim_rs::object::circle::Circle as manim_rs::draw::Draw&gt;::draw (497 samples, 7.56%)</title><rect x="4.0919%" y="357" width="7.5601%" height="15" fill="rgb(224,114,35)"/><text x="4.3419%" y="367.50">manim_rs`&lt;..</text></g><g><title>manim_rs`nannou::draw::primitive::polygon::_&lt;impl nannou::draw::drawing::Drawing&lt;T,S&gt;&gt;::stroke_color (78 samples, 1.19%)</title><rect x="10.4655%" y="341" width="1.1865%" height="15" fill="rgb(245,159,27)"/><text x="10.7155%" y="351.50"></text></g><g><title>manim_rs`nannou::draw::primitive::ellipse::_&lt;impl core::convert::Into&lt;core::option::Option&lt;nannou::draw::primitive::ellipse::Ellipse&lt;S&gt;&gt;&gt; for nannou::draw::primitive::Primitive&lt;S&gt;&gt;::into (8 samples, 0.12%)</title><rect x="11.5303%" y="325" width="0.1217%" height="15" fill="rgb(245,172,44)"/><text x="11.7803%" y="335.50"></text></g><g><title>manim_rs`manim_rs::scene::Scene::draw (515 samples, 7.83%)</title><rect x="3.8333%" y="389" width="7.8339%" height="15" fill="rgb(236,23,11)"/><text x="4.0833%" y="399.50">manim_rs`ma..</text></g><g><title>manim_rs`manim_rs::object::_&lt;impl manim_rs::draw::Draw for alloc::rc::Rc&lt;core::cell::RefCell&lt;manim_rs::object::Object&gt;&gt;&gt;::draw (503 samples, 7.65%)</title><rect x="4.0158%" y="373" width="7.6514%" height="15" fill="rgb(205,117,38)"/><text x="4.2658%" y="383.50">manim_rs`m..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,188 samples, 18.07%)</title><rect x="11.7128%" y="341" width="18.0712%" height="15" fill="rgb(237,72,25)"/><text x="11.9628%" y="351.50">libsystem_platform.dylib`_pl..</text></g><g><title>libsystem_kernel.dylib`madvise (9 samples, 0.14%)</title><rect x="29.9513%" y="325" width="0.1369%" height="15" fill="rgb(244,70,9)"/><text x="30.2013%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (31 samples, 0.47%)</title><rect x="30.1034%" y="325" width="0.4716%" height="15" fill="rgb(217,125,39)"/><text x="30.3534%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.32%)</title><rect x="30.6054%" y="309" width="0.3194%" height="15" fill="rgb(235,36,10)"/><text x="30.8554%" y="319.50"></text></g><g><title>manim_rs`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::from_iter (50 samples, 0.76%)</title><rect x="30.5750%" y="325" width="0.7606%" height="15" fill="rgb(251,123,47)"/><text x="30.8250%" y="335.50"></text></g><g><title>manim_rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.41%)</title><rect x="30.9249%" y="309" width="0.4107%" height="15" fill="rgb(221,13,13)"/><text x="31.1749%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`realloc (27 samples, 0.41%)</title><rect x="30.9249%" y="293" width="0.4107%" height="15" fill="rgb(238,131,9)"/><text x="31.1749%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (27 samples, 0.41%)</title><rect x="30.9249%" y="277" width="0.4107%" height="15" fill="rgb(211,50,8)"/><text x="31.1749%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (27 samples, 0.41%)</title><rect x="30.9249%" y="261" width="0.4107%" height="15" fill="rgb(245,182,24)"/><text x="31.1749%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.37%)</title><rect x="30.9705%" y="245" width="0.3651%" height="15" fill="rgb(242,14,37)"/><text x="31.2205%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.14%)</title><rect x="32.1266%" y="277" width="0.1369%" height="15" fill="rgb(246,228,12)"/><text x="32.3766%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.12%)</title><rect x="32.1418%" y="261" width="0.1217%" height="15" fill="rgb(213,55,15)"/><text x="32.3918%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.23%)</title><rect x="32.0505%" y="293" width="0.2282%" height="15" fill="rgb(209,9,3)"/><text x="32.3005%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.18%)</title><rect x="32.8719%" y="261" width="0.1825%" height="15" fill="rgb(230,59,30)"/><text x="33.1219%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (57 samples, 0.87%)</title><rect x="32.2787%" y="293" width="0.8671%" height="15" fill="rgb(209,121,21)"/><text x="32.5287%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (37 samples, 0.56%)</title><rect x="32.5829%" y="277" width="0.5628%" height="15" fill="rgb(220,109,13)"/><text x="32.8329%" y="287.50"></text></g><g><title>libsystem_m.dylib`0x00007fff71172f00 (39 samples, 0.59%)</title><rect x="33.2522%" y="277" width="0.5932%" height="15" fill="rgb(232,18,1)"/><text x="33.5022%" y="287.50"></text></g><g><title>libsystem_m.dylib`0x00007fff71172fe0 (46 samples, 0.70%)</title><rect x="33.8455%" y="277" width="0.6997%" height="15" fill="rgb(215,41,42)"/><text x="34.0955%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_free (7 samples, 0.11%)</title><rect x="36.4922%" y="197" width="0.1065%" height="15" fill="rgb(224,123,36)"/><text x="36.7422%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (15 samples, 0.23%)</title><rect x="37.4049%" y="149" width="0.2282%" height="15" fill="rgb(240,125,3)"/><text x="37.6549%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (61 samples, 0.93%)</title><rect x="36.7356%" y="181" width="0.9279%" height="15" fill="rgb(205,98,50)"/><text x="36.9856%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (30 samples, 0.46%)</title><rect x="37.2072%" y="165" width="0.4563%" height="15" fill="rgb(205,185,37)"/><text x="37.4572%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (75 samples, 1.14%)</title><rect x="37.6787%" y="181" width="1.1409%" height="15" fill="rgb(238,207,15)"/><text x="37.9287%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (66 samples, 1.00%)</title><rect x="37.8156%" y="165" width="1.0040%" height="15" fill="rgb(213,199,42)"/><text x="38.0656%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.35%)</title><rect x="38.4697%" y="149" width="0.3499%" height="15" fill="rgb(235,201,11)"/><text x="38.7197%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (10 samples, 0.15%)</title><rect x="38.6675%" y="133" width="0.1521%" height="15" fill="rgb(207,46,11)"/><text x="38.9175%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.21%)</title><rect x="38.8196%" y="181" width="0.2130%" height="15" fill="rgb(241,35,35)"/><text x="39.0696%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.17%)</title><rect x="38.8652%" y="165" width="0.1673%" height="15" fill="rgb(243,32,47)"/><text x="39.1152%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (28 samples, 0.43%)</title><rect x="39.0478%" y="181" width="0.4259%" height="15" fill="rgb(247,202,23)"/><text x="39.2978%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (191 samples, 2.91%)</title><rect x="36.6291%" y="197" width="2.9054%" height="15" fill="rgb(219,102,11)"/><text x="36.8791%" y="207.50">li..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (216 samples, 3.29%)</title><rect x="36.3097%" y="213" width="3.2857%" height="15" fill="rgb(243,110,44)"/><text x="36.5597%" y="223.50">lib..</text></g><g><title>libsystem_malloc.dylib`realloc (249 samples, 3.79%)</title><rect x="36.1576%" y="229" width="3.7876%" height="15" fill="rgb(222,74,54)"/><text x="36.4076%" y="239.50">libs..</text></g><g><title>libsystem_malloc.dylib`szone_size (22 samples, 0.33%)</title><rect x="39.6106%" y="213" width="0.3347%" height="15" fill="rgb(216,99,12)"/><text x="39.8606%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (20 samples, 0.30%)</title><rect x="39.6410%" y="197" width="0.3042%" height="15" fill="rgb(226,22,26)"/><text x="39.8910%" y="207.50"></text></g><g><title>manim_rs`lyon_path::path::Builder::arc (447 samples, 6.80%)</title><rect x="33.1761%" y="293" width="6.7995%" height="15" fill="rgb(217,163,10)"/><text x="33.4261%" y="303.50">manim_rs`..</text></g><g><title>manim_rs`lyon_geom::arc::arc_to_quadratic_beziers (356 samples, 5.42%)</title><rect x="34.5604%" y="277" width="5.4153%" height="15" fill="rgb(213,25,53)"/><text x="34.8104%" y="287.50">manim_r..</text></g><g><title>manim_rs`lyon_path::path::Builder::quadratic_bezier_to (271 samples, 4.12%)</title><rect x="35.8534%" y="261" width="4.1223%" height="15" fill="rgb(252,105,26)"/><text x="36.1034%" y="271.50">mani..</text></g><g><title>manim_rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (259 samples, 3.94%)</title><rect x="36.0359%" y="245" width="3.9398%" height="15" fill="rgb(220,39,43)"/><text x="36.2859%" y="255.50">mani..</text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (18 samples, 0.27%)</title><rect x="40.3255%" y="245" width="0.2738%" height="15" fill="rgb(229,68,48)"/><text x="40.5755%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (14 samples, 0.21%)</title><rect x="40.3864%" y="229" width="0.2130%" height="15" fill="rgb(252,8,32)"/><text x="40.6364%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.15%)</title><rect x="40.4472%" y="213" width="0.1521%" height="15" fill="rgb(223,20,43)"/><text x="40.6972%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.15%)</title><rect x="40.4472%" y="197" width="0.1521%" height="15" fill="rgb(229,81,49)"/><text x="40.6972%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (39 samples, 0.59%)</title><rect x="40.2647%" y="261" width="0.5932%" height="15" fill="rgb(236,28,36)"/><text x="40.5147%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (17 samples, 0.26%)</title><rect x="40.5993%" y="245" width="0.2586%" height="15" fill="rgb(249,185,26)"/><text x="40.8493%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.20%)</title><rect x="40.6602%" y="229" width="0.1977%" height="15" fill="rgb(249,174,33)"/><text x="40.9102%" y="239.50"></text></g><g><title>manim_rs`lyon_path::path::Builder::build (64 samples, 0.97%)</title><rect x="39.9757%" y="293" width="0.9735%" height="15" fill="rgb(233,201,37)"/><text x="40.2257%" y="303.50"></text></g><g><title>manim_rs`alloc::vec::Vec&lt;T&gt;::into_boxed_slice (55 samples, 0.84%)</title><rect x="40.1126%" y="277" width="0.8366%" height="15" fill="rgb(221,78,26)"/><text x="40.3626%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (7 samples, 0.11%)</title><rect x="41.1622%" y="229" width="0.1065%" height="15" fill="rgb(250,127,30)"/><text x="41.4122%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (51 samples, 0.78%)</title><rect x="41.2686%" y="229" width="0.7758%" height="15" fill="rgb(230,49,44)"/><text x="41.5186%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (50 samples, 0.76%)</title><rect x="41.2838%" y="213" width="0.7606%" height="15" fill="rgb(229,67,23)"/><text x="41.5338%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (64 samples, 0.97%)</title><rect x="41.1013%" y="245" width="0.9735%" height="15" fill="rgb(249,83,47)"/><text x="41.3513%" y="255.50"></text></g><g><title>manim_rs`lyon_path::path::Builder::move_to (75 samples, 1.14%)</title><rect x="40.9492%" y="293" width="1.1409%" height="15" fill="rgb(215,43,3)"/><text x="41.1992%" y="303.50"></text></g><g><title>manim_rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (71 samples, 1.08%)</title><rect x="41.0100%" y="277" width="1.0800%" height="15" fill="rgb(238,154,13)"/><text x="41.2600%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (66 samples, 1.00%)</title><rect x="41.0861%" y="261" width="1.0040%" height="15" fill="rgb(219,56,2)"/><text x="41.3361%" y="271.50"></text></g><g><title>libsystem_m.dylib`0x00007fff71172f00 (8 samples, 0.12%)</title><rect x="42.4095%" y="277" width="0.1217%" height="15" fill="rgb(233,0,4)"/><text x="42.6595%" y="287.50"></text></g><g><title>manim_rs`&lt;cgmath::matrix::Matrix4&lt;S&gt; as core::ops::arith::Mul&gt;::mul (8 samples, 0.12%)</title><rect x="42.7441%" y="277" width="0.1217%" height="15" fill="rgb(235,30,7)"/><text x="42.9941%" y="287.50"></text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueue::into_builder (9 samples, 0.14%)</title><rect x="43.5199%" y="245" width="0.1369%" height="15" fill="rgb(250,79,13)"/><text x="43.7699%" y="255.50"></text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueueBuilder::build (140 samples, 2.13%)</title><rect x="43.6568%" y="245" width="2.1296%" height="15" fill="rgb(211,146,34)"/><text x="43.9068%" y="255.50">m..</text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueue::merge_sort (138 samples, 2.10%)</title><rect x="43.6873%" y="229" width="2.0992%" height="15" fill="rgb(228,22,38)"/><text x="43.9373%" y="239.50">m..</text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueue::merge_sort (119 samples, 1.81%)</title><rect x="43.9763%" y="213" width="1.8102%" height="15" fill="rgb(235,168,5)"/><text x="44.2263%" y="223.50">m..</text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueue::merge_sort (91 samples, 1.38%)</title><rect x="44.4022%" y="197" width="1.3842%" height="15" fill="rgb(221,155,16)"/><text x="44.6522%" y="207.50"></text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueue::merge_sort (66 samples, 1.00%)</title><rect x="44.7825%" y="181" width="1.0040%" height="15" fill="rgb(215,215,53)"/><text x="45.0325%" y="191.50"></text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueue::merge_sort (32 samples, 0.49%)</title><rect x="45.2997%" y="165" width="0.4868%" height="15" fill="rgb(223,4,10)"/><text x="45.5497%" y="175.50"></text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueue::merge_sort (8 samples, 0.12%)</title><rect x="45.6647%" y="149" width="0.1217%" height="15" fill="rgb(234,103,6)"/><text x="45.9147%" y="159.50"></text></g><g><title>manim_rs`&lt;lyon_path::path::Iter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.12%)</title><rect x="45.9538%" y="229" width="0.1217%" height="15" fill="rgb(227,97,0)"/><text x="46.2038%" y="239.50"></text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueueBuilder::end (10 samples, 0.15%)</title><rect x="46.1059%" y="229" width="0.1521%" height="15" fill="rgb(234,150,53)"/><text x="46.3559%" y="239.50"></text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueueBuilder::line_segment (8 samples, 0.12%)</title><rect x="46.1363%" y="213" width="0.1217%" height="15" fill="rgb(228,201,54)"/><text x="46.3863%" y="223.50"></text></g><g><title>manim_rs`lyon_geom::quadratic_bezier::QuadraticBezierSegment&lt;S&gt;::for_each_flattened_with_t (41 samples, 0.62%)</title><rect x="46.9425%" y="213" width="0.6237%" height="15" fill="rgb(222,22,37)"/><text x="47.1925%" y="223.50"></text></g><g><title>libsystem_m.dylib`hypotf (21 samples, 0.32%)</title><rect x="47.6422%" y="197" width="0.3194%" height="15" fill="rgb(237,53,32)"/><text x="47.8922%" y="207.50"></text></g><g><title>manim_rs`lyon_geom::quadratic_bezier::FlatteningParameters&lt;S&gt;::from_curve (147 samples, 2.24%)</title><rect x="48.0073%" y="197" width="2.2361%" height="15" fill="rgb(233,25,53)"/><text x="48.2573%" y="207.50">m..</text></g><g><title>manim_rs`lyon_geom::quadratic_bezier::QuadraticBezierSegment&lt;S&gt;::for_each_flattened_with_t::_{{closure}} (138 samples, 2.10%)</title><rect x="50.2434%" y="197" width="2.0992%" height="15" fill="rgb(210,40,34)"/><text x="50.4934%" y="207.50">m..</text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueueBuilder::add_edge (61 samples, 0.93%)</title><rect x="51.4147%" y="181" width="0.9279%" height="15" fill="rgb(241,220,44)"/><text x="51.6647%" y="191.50"></text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueueBuilder::quadratic_bezier_segment (398 samples, 6.05%)</title><rect x="46.3188%" y="229" width="6.0542%" height="15" fill="rgb(235,28,35)"/><text x="46.5688%" y="239.50">manim_rs..</text></g><g><title>manim_rs`lyon_geom::quadratic_bezier::QuadraticBezierSegment&lt;S&gt;::for_each_flattened_with_t (313 samples, 4.76%)</title><rect x="47.6118%" y="213" width="4.7612%" height="15" fill="rgb(210,56,17)"/><text x="47.8618%" y="223.50">manim_..</text></g><g><title>manim_rs`lyon_tessellation::event_queue::EventQueueBuilder::set_path (434 samples, 6.60%)</title><rect x="45.8016%" y="245" width="6.6018%" height="15" fill="rgb(224,130,29)"/><text x="46.0516%" y="255.50">manim_rs`..</text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.26%)</title><rect x="55.5978%" y="229" width="0.2586%" height="15" fill="rgb(235,212,8)"/><text x="55.8478%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.14%)</title><rect x="55.7195%" y="213" width="0.1369%" height="15" fill="rgb(223,33,50)"/><text x="55.9695%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (7 samples, 0.11%)</title><rect x="55.7499%" y="197" width="0.1065%" height="15" fill="rgb(219,149,13)"/><text x="55.9999%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (25 samples, 0.38%)</title><rect x="56.7843%" y="197" width="0.3803%" height="15" fill="rgb(250,156,29)"/><text x="57.0343%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (92 samples, 1.40%)</title><rect x="55.8564%" y="229" width="1.3995%" height="15" fill="rgb(216,193,19)"/><text x="56.1064%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (59 samples, 0.90%)</title><rect x="56.3584%" y="213" width="0.8975%" height="15" fill="rgb(216,135,14)"/><text x="56.6084%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.15%)</title><rect x="57.2559%" y="229" width="0.1521%" height="15" fill="rgb(241,47,5)"/><text x="57.5059%" y="239.50"></text></g><g><title>manim_rs`&lt;nannou::mesh::WithTexCoords&lt;M,alloc::vec::Vec&lt;T&gt;&gt; as nannou::mesh::PushVertex&lt;nannou::mesh::vertex::WithTexCoords&lt;V,T&gt;&gt;&gt;::push_vertex (153 samples, 2.33%)</title><rect x="59.2181%" y="213" width="2.3274%" height="15" fill="rgb(233,42,35)"/><text x="59.4681%" y="223.50">m..</text></g><g><title>manim_rs`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;nannou::draw::mesh::builder::SingleColor&gt; as lyon_tessellation::geometry_builder::FillGeometryBuilder&gt;::add_fill_vertex (273 samples, 4.15%)</title><rect x="57.4384%" y="229" width="4.1527%" height="15" fill="rgb(231,13,6)"/><text x="57.6884%" y="239.50">manim..</text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (13 samples, 0.20%)</title><rect x="68.3298%" y="165" width="0.1977%" height="15" fill="rgb(207,181,40)"/><text x="68.5798%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (57 samples, 0.87%)</title><rect x="68.2081%" y="213" width="0.8671%" height="15" fill="rgb(254,173,49)"/><text x="68.4581%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (53 samples, 0.81%)</title><rect x="68.2689%" y="197" width="0.8062%" height="15" fill="rgb(221,1,38)"/><text x="68.5189%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.79%)</title><rect x="68.2841%" y="181" width="0.7910%" height="15" fill="rgb(206,124,46)"/><text x="68.5341%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (36 samples, 0.55%)</title><rect x="68.5275%" y="165" width="0.5476%" height="15" fill="rgb(249,21,11)"/><text x="68.7775%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.23%)</title><rect x="68.8470%" y="149" width="0.2282%" height="15" fill="rgb(222,201,40)"/><text x="69.0970%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (7 samples, 0.11%)</title><rect x="68.9687%" y="133" width="0.1065%" height="15" fill="rgb(235,61,29)"/><text x="69.2187%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (34 samples, 0.52%)</title><rect x="69.1056%" y="213" width="0.5172%" height="15" fill="rgb(219,207,3)"/><text x="69.3556%" y="223.50"></text></g><g><title>manim_rs`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;A&gt; as lyon_tessellation::geometry_builder::GeometryBuilder&gt;::add_triangle (48 samples, 0.73%)</title><rect x="69.6228%" y="213" width="0.7301%" height="15" fill="rgb(222,56,46)"/><text x="69.8728%" y="223.50"></text></g><g><title>manim_rs`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (86 samples, 1.31%)</title><rect x="70.3833%" y="213" width="1.3082%" height="15" fill="rgb(239,76,54)"/><text x="70.6333%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (77 samples, 1.17%)</title><rect x="70.5202%" y="197" width="1.1713%" height="15" fill="rgb(231,124,27)"/><text x="70.7702%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (71 samples, 1.08%)</title><rect x="70.6115%" y="181" width="1.0800%" height="15" fill="rgb(249,195,6)"/><text x="70.8615%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (69 samples, 1.05%)</title><rect x="70.6419%" y="165" width="1.0496%" height="15" fill="rgb(237,174,47)"/><text x="70.8919%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (67 samples, 1.02%)</title><rect x="70.6723%" y="149" width="1.0192%" height="15" fill="rgb(206,201,31)"/><text x="70.9223%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (17 samples, 0.26%)</title><rect x="71.4329%" y="133" width="0.2586%" height="15" fill="rgb(231,57,52)"/><text x="71.6829%" y="143.50"></text></g><g><title>manim_rs`alloc::slice::merge_sort (18 samples, 0.27%)</title><rect x="71.7067%" y="213" width="0.2738%" height="15" fill="rgb(248,177,22)"/><text x="71.9567%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (7 samples, 0.11%)</title><rect x="72.6346%" y="181" width="0.1065%" height="15" fill="rgb(215,211,37)"/><text x="72.8846%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.24%)</title><rect x="72.5129%" y="197" width="0.2434%" height="15" fill="rgb(241,128,51)"/><text x="72.7629%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (24 samples, 0.37%)</title><rect x="72.8476%" y="197" width="0.3651%" height="15" fill="rgb(227,165,31)"/><text x="73.0976%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (12 samples, 0.18%)</title><rect x="73.0301%" y="181" width="0.1825%" height="15" fill="rgb(228,167,24)"/><text x="73.2801%" y="191.50"></text></g><g><title>manim_rs`alloc::vec::Vec&lt;T&gt;::retain (83 samples, 1.26%)</title><rect x="71.9805%" y="213" width="1.2625%" height="15" fill="rgb(228,143,12)"/><text x="72.2305%" y="223.50"></text></g><g><title>manim_rs`lyon_tessellation::VertexId::to_usize (8 samples, 0.12%)</title><rect x="73.2431%" y="213" width="0.1217%" height="15" fill="rgb(249,149,8)"/><text x="73.4931%" y="223.50"></text></g><g><title>manim_rs`lyon_tessellation::fill::FillTessellator::process_events (841 samples, 12.79%)</title><rect x="61.6976%" y="229" width="12.7928%" height="15" fill="rgb(243,35,44)"/><text x="61.9476%" y="239.50">manim_rs`lyon_tesse..</text></g><g><title>manim_rs`lyon_tessellation::monotone::MonotoneTessellator::vertex (74 samples, 1.13%)</title><rect x="73.3648%" y="213" width="1.1256%" height="15" fill="rgb(246,89,9)"/><text x="73.6148%" y="223.50"></text></g><g><title>manim_rs`lyon_tessellation::fill::FillTessellator::tessellate (2,061 samples, 31.35%)</title><rect x="43.1549%" y="261" width="31.3508%" height="15" fill="rgb(233,213,13)"/><text x="43.4049%" y="271.50">manim_rs`lyon_tessellation::fill::FillTessellator::..</text></g><g><title>manim_rs`lyon_tessellation::fill::FillTessellator::tessellate_impl (1,450 samples, 22.06%)</title><rect x="52.4490%" y="245" width="22.0566%" height="15" fill="rgb(233,141,41)"/><text x="52.6990%" y="255.50">manim_rs`lyon_tessellation::fill::F..</text></g><g><title>manim_rs`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;nannou::draw::mesh::builder::SingleColor&gt; as lyon_tessellation::geometry_builder::StrokeGeometryBuilder&gt;::add_stroke_vertex (33 samples, 0.50%)</title><rect x="75.2206%" y="213" width="0.5020%" height="15" fill="rgb(239,167,4)"/><text x="75.4706%" y="223.50"></text></g><g><title>manim_rs`&lt;nannou::mesh::WithTexCoords&lt;M,alloc::vec::Vec&lt;T&gt;&gt; as nannou::mesh::PushVertex&lt;nannou::mesh::vertex::WithTexCoords&lt;V,T&gt;&gt;&gt;::push_vertex (17 samples, 0.26%)</title><rect x="75.4639%" y="197" width="0.2586%" height="15" fill="rgb(209,217,16)"/><text x="75.7139%" y="207.50"></text></g><g><title>manim_rs`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;nannou::draw::mesh::builder::SingleColor&gt; as lyon_tessellation::geometry_builder::StrokeGeometryBuilder&gt;::add_stroke_vertex (19 samples, 0.29%)</title><rect x="76.2093%" y="197" width="0.2890%" height="15" fill="rgb(219,88,35)"/><text x="76.4593%" y="207.50"></text></g><g><title>manim_rs`&lt;nannou::mesh::WithTexCoords&lt;M,alloc::vec::Vec&lt;T&gt;&gt; as nannou::mesh::PushVertex&lt;nannou::mesh::vertex::WithTexCoords&lt;V,T&gt;&gt;&gt;::push_vertex (13 samples, 0.20%)</title><rect x="76.3006%" y="181" width="0.1977%" height="15" fill="rgb(220,193,23)"/><text x="76.5506%" y="191.50"></text></g><g><title>manim_rs`&lt;lyon_tessellation::stroke::StrokeBuilder as lyon_path::builder::Build&gt;::build (108 samples, 1.64%)</title><rect x="74.8707%" y="245" width="1.6428%" height="15" fill="rgb(230,90,52)"/><text x="75.1207%" y="255.50"></text></g><g><title>manim_rs`lyon_tessellation::stroke::StrokeBuilder::finish (107 samples, 1.63%)</title><rect x="74.8859%" y="229" width="1.6276%" height="15" fill="rgb(252,106,19)"/><text x="75.1359%" y="239.50"></text></g><g><title>manim_rs`lyon_tessellation::stroke::StrokeBuilder::edge_to (51 samples, 0.78%)</title><rect x="75.7378%" y="213" width="0.7758%" height="15" fill="rgb(206,74,20)"/><text x="75.9878%" y="223.50"></text></g><g><title>libsystem_m.dylib`hypotf (17 samples, 0.26%)</title><rect x="78.3845%" y="213" width="0.2586%" height="15" fill="rgb(230,138,44)"/><text x="78.6345%" y="223.50"></text></g><g><title>manim_rs`lyon_geom::quadratic_bezier::FlatteningParameters&lt;S&gt;::from_curve (147 samples, 2.24%)</title><rect x="78.7800%" y="213" width="2.2361%" height="15" fill="rgb(235,182,43)"/><text x="79.0300%" y="223.50">m..</text></g><g><title>manim_rs`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;A&gt; as lyon_tessellation::geometry_builder::GeometryBuilder&gt;::add_triangle (66 samples, 1.00%)</title><rect x="88.3328%" y="197" width="1.0040%" height="15" fill="rgb(242,16,51)"/><text x="88.5828%" y="207.50"></text></g><g><title>manim_rs`&lt;nannou::mesh::WithTexCoords&lt;M,alloc::vec::Vec&lt;T&gt;&gt; as nannou::mesh::PushVertex&lt;nannou::mesh::vertex::WithTexCoords&lt;V,T&gt;&gt;&gt;::push_vertex (248 samples, 3.77%)</title><rect x="91.0405%" y="181" width="3.7724%" height="15" fill="rgb(248,9,4)"/><text x="91.2905%" y="191.50">mani..</text></g><g><title>manim_rs`&lt;nannou::draw::mesh::builder::MeshBuilder&lt;nannou::draw::mesh::builder::SingleColor&gt; as lyon_tessellation::geometry_builder::StrokeGeometryBuilder&gt;::add_stroke_vertex (364 samples, 5.54%)</title><rect x="89.3368%" y="197" width="5.5370%" height="15" fill="rgb(210,31,22)"/><text x="89.5868%" y="207.50">manim_r..</text></g><g><title>manim_rs`lyon_geom::quadratic_bezier::QuadraticBezierSegment&lt;S&gt;::for_each_flattened (1,202 samples, 18.28%)</title><rect x="76.9242%" y="229" width="18.2841%" height="15" fill="rgb(239,54,39)"/><text x="77.1742%" y="239.50">manim_rs`lyon_geom::quadrati..</text></g><g><title>manim_rs`lyon_tessellation::stroke::StrokeBuilder::edge_to (933 samples, 14.19%)</title><rect x="81.0161%" y="213" width="14.1923%" height="15" fill="rgb(230,99,41)"/><text x="81.2661%" y="223.50">manim_rs`lyon_tessella..</text></g><g><title>manim_rs`lyon_tessellation::VertexId::to_usize (14 samples, 0.21%)</title><rect x="94.9954%" y="197" width="0.2130%" height="15" fill="rgb(253,106,12)"/><text x="95.2454%" y="207.50"></text></g><g><title>manim_rs`&lt;lyon_tessellation::stroke::StrokeBuilder as lyon_path::builder::PathBuilder&gt;::quadratic_bezier_to (1,229 samples, 18.69%)</title><rect x="76.5744%" y="245" width="18.6949%" height="15" fill="rgb(213,46,41)"/><text x="76.8244%" y="255.50">manim_rs`&lt;lyon_tessellation::..</text></g><g><title>manim_rs`&lt;nannou::draw::primitive::ellipse::Ellipse as nannou::draw::renderer::RenderPrimitive&gt;::render_primitive (4,191 samples, 63.75%)</title><rect x="31.5637%" y="309" width="63.7511%" height="15" fill="rgb(215,133,35)"/><text x="31.8137%" y="319.50">manim_rs`&lt;nannou::draw::primitive::ellipse::Ellipse as nannou::draw::renderer::RenderPrimitive&gt;::render_pr..</text></g><g><title>manim_rs`nannou::draw::primitive::polygon::render_events_themed (3,495 samples, 53.16%)</title><rect x="42.1509%" y="293" width="53.1640%" height="15" fill="rgb(213,28,5)"/><text x="42.4009%" y="303.50">manim_rs`nannou::draw::primitive::polygon::render_events_themed</text></g><g><title>manim_rs`nannou::draw::primitive::path::render_path_events (3,447 samples, 52.43%)</title><rect x="42.8810%" y="277" width="52.4338%" height="15" fill="rgb(215,77,49)"/><text x="43.1310%" y="287.50">manim_rs`nannou::draw::primitive::path::render_path_events</text></g><g><title>manim_rs`lyon_tessellation::stroke::StrokeTessellator::tessellate (1,368 samples, 20.81%)</title><rect x="74.5056%" y="261" width="20.8092%" height="15" fill="rgb(248,100,22)"/><text x="74.7556%" y="271.50">manim_rs`lyon_tessellation::strok..</text></g><g><title>manim_rs`&lt;nannou::draw::primitive::Primitive as nannou::draw::renderer::RenderPrimitive&gt;::render_primitive (4,208 samples, 64.01%)</title><rect x="31.3356%" y="325" width="64.0097%" height="15" fill="rgb(208,67,9)"/><text x="31.5856%" y="335.50">manim_rs`&lt;nannou::draw::primitive::Primitive as nannou::draw::renderer::RenderPrimitive&gt;::render_primitive</text></g><g><title>manim_rs`nannou::draw::renderer::Renderer::fill (4,315 samples, 65.64%)</title><rect x="29.7992%" y="341" width="65.6374%" height="15" fill="rgb(219,133,21)"/><text x="30.0492%" y="351.50">manim_rs`nannou::draw::renderer::Renderer::fill</text></g><g><title>manim_rs`wgpu::CommandEncoder::begin_render_pass (11 samples, 0.17%)</title><rect x="95.4366%" y="341" width="0.1673%" height="15" fill="rgb(246,46,29)"/><text x="95.6866%" y="351.50"></text></g><g><title>manim_rs`wgpu_command_encoder_begin_render_pass (11 samples, 0.17%)</title><rect x="95.4366%" y="325" width="0.1673%" height="15" fill="rgb(246,185,52)"/><text x="95.6866%" y="335.50"></text></g><g><title>IOKit`io_connect_method (82 samples, 1.25%)</title><rect x="95.6495%" y="117" width="1.2473%" height="15" fill="rgb(252,136,11)"/><text x="95.8995%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (81 samples, 1.23%)</title><rect x="95.6647%" y="101" width="1.2321%" height="15" fill="rgb(219,138,53)"/><text x="95.9147%" y="111.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (83 samples, 1.26%)</title><rect x="95.6495%" y="149" width="1.2625%" height="15" fill="rgb(211,51,23)"/><text x="95.8995%" y="159.50"></text></g><g><title>IOKit`IOConnectCallMethod (83 samples, 1.26%)</title><rect x="95.6495%" y="133" width="1.2625%" height="15" fill="rgb(247,221,28)"/><text x="95.8995%" y="143.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[AMD_MtlBuffer initInternalWithDevice:pointer:length:options:deallocator:] (91 samples, 1.38%)</title><rect x="95.6343%" y="229" width="1.3842%" height="15" fill="rgb(251,222,45)"/><text x="95.8843%" y="239.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[AMD_MtlBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (91 samples, 1.38%)</title><rect x="95.6343%" y="213" width="1.3842%" height="15" fill="rgb(217,162,53)"/><text x="95.8843%" y="223.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer initWithDevice:pointer:length:options:sysMemSize:vidMemSize:args:argsSize:deallocator:] (91 samples, 1.38%)</title><rect x="95.6343%" y="197" width="1.3842%" height="15" fill="rgb(229,93,14)"/><text x="95.8843%" y="207.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:options:args:argsSize:] (91 samples, 1.38%)</title><rect x="95.6343%" y="181" width="1.3842%" height="15" fill="rgb(209,67,49)"/><text x="95.8843%" y="191.50"></text></g><g><title>Metal`-[MTLIOAccelResource initWithDevice:remoteStorageResource:options:args:argsSize:] (91 samples, 1.38%)</title><rect x="95.6343%" y="165" width="1.3842%" height="15" fill="rgb(213,87,29)"/><text x="95.8843%" y="175.50"></text></g><g><title>AMDRadeonX6000MTLDriver`-[AMD_MtlDevice newBufferWithLength:options:] (92 samples, 1.40%)</title><rect x="95.6343%" y="245" width="1.3995%" height="15" fill="rgb(205,151,52)"/><text x="95.8843%" y="255.50"></text></g><g><title>manim_rs`wgpu_device_create_buffer_mapped (94 samples, 1.43%)</title><rect x="95.6191%" y="341" width="1.4299%" height="15" fill="rgb(253,215,39)"/><text x="95.8691%" y="351.50"></text></g><g><title>manim_rs`wgpu_native::device::Device&lt;B&gt;::create_buffer (94 samples, 1.43%)</title><rect x="95.6191%" y="325" width="1.4299%" height="15" fill="rgb(221,220,41)"/><text x="95.8691%" y="335.50"></text></g><g><title>manim_rs`rendy_memory::heaps::Heaps&lt;B&gt;::allocate (93 samples, 1.41%)</title><rect x="95.6343%" y="309" width="1.4147%" height="15" fill="rgb(218,133,21)"/><text x="95.8843%" y="319.50"></text></g><g><title>manim_rs`rendy_memory::heaps::memory_type::MemoryType&lt;B&gt;::alloc (93 samples, 1.41%)</title><rect x="95.6343%" y="293" width="1.4147%" height="15" fill="rgb(221,193,43)"/><text x="95.8843%" y="303.50"></text></g><g><title>manim_rs`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::allocate_memory (93 samples, 1.41%)</title><rect x="95.6343%" y="277" width="1.4147%" height="15" fill="rgb(240,128,52)"/><text x="95.8843%" y="287.50"></text></g><g><title>manim_rs`metal::device::DeviceRef::new_buffer (93 samples, 1.41%)</title><rect x="95.6343%" y="261" width="1.4147%" height="15" fill="rgb(253,114,12)"/><text x="95.8843%" y="271.50"></text></g><g><title>manim_rs`nannou::app::_&lt;impl nannou::draw::Draw&gt;::to_frame (5,615 samples, 85.41%)</title><rect x="11.6672%" y="389" width="85.4122%" height="15" fill="rgb(215,223,47)"/><text x="11.9172%" y="399.50">manim_rs`nannou::app::_&lt;impl nannou::draw::Draw&gt;::to_frame</text></g><g><title>manim_rs`nannou::draw::renderer::Renderer::render_to_frame (5,612 samples, 85.37%)</title><rect x="11.7128%" y="373" width="85.3666%" height="15" fill="rgb(248,225,23)"/><text x="11.9628%" y="383.50">manim_rs`nannou::draw::renderer::Renderer::render_to_frame</text></g><g><title>manim_rs`nannou::draw::renderer::Renderer::encode_render_pass (5,612 samples, 85.37%)</title><rect x="11.7128%" y="357" width="85.3666%" height="15" fill="rgb(250,108,0)"/><text x="11.9628%" y="367.50">manim_rs`nannou::draw::renderer::Renderer::encode_render_pass</text></g><g><title>IOKit`io_connect_method (100 samples, 1.52%)</title><rect x="97.1402%" y="197" width="1.5211%" height="15" fill="rgb(228,208,7)"/><text x="97.3902%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (99 samples, 1.51%)</title><rect x="97.1555%" y="181" width="1.5059%" height="15" fill="rgb(244,45,10)"/><text x="97.4055%" y="191.50"></text></g><g><title>manim_rs`nannou::frame::raw::RawFrame::submit_inner (105 samples, 1.60%)</title><rect x="97.0794%" y="373" width="1.5972%" height="15" fill="rgb(207,125,25)"/><text x="97.3294%" y="383.50"></text></g><g><title>manim_rs`wgpu_queue_submit (105 samples, 1.60%)</title><rect x="97.0794%" y="357" width="1.5972%" height="15" fill="rgb(210,195,18)"/><text x="97.3294%" y="367.50"></text></g><g><title>manim_rs`wgpu_native::device::Device&lt;B&gt;::maintain (103 samples, 1.57%)</title><rect x="97.1098%" y="341" width="1.5668%" height="15" fill="rgb(249,80,12)"/><text x="97.3598%" y="351.50"></text></g><g><title>manim_rs`rendy_memory::heaps::Heaps&lt;B&gt;::free (102 samples, 1.55%)</title><rect x="97.1250%" y="325" width="1.5516%" height="15" fill="rgb(221,65,9)"/><text x="97.3750%" y="335.50"></text></g><g><title>manim_rs`rendy_memory::heaps::memory_type::MemoryType&lt;B&gt;::free (102 samples, 1.55%)</title><rect x="97.1250%" y="309" width="1.5516%" height="15" fill="rgb(235,49,36)"/><text x="97.3750%" y="319.50"></text></g><g><title>manim_rs`&lt;gfx_backend_metal::device::Device as gfx_hal::device::Device&lt;gfx_backend_metal::Backend&gt;&gt;::free_memory (102 samples, 1.55%)</title><rect x="97.1250%" y="293" width="1.5516%" height="15" fill="rgb(225,32,20)"/><text x="97.3750%" y="303.50"></text></g><g><title>Metal`-[MTLIOAccelBuffer dealloc] (102 samples, 1.55%)</title><rect x="97.1250%" y="277" width="1.5516%" height="15" fill="rgb(215,141,46)"/><text x="97.3750%" y="287.50"></text></g><g><title>Metal`-[MTLIOAccelResource dealloc] (102 samples, 1.55%)</title><rect x="97.1250%" y="261" width="1.5516%" height="15" fill="rgb(250,160,47)"/><text x="97.3750%" y="271.50"></text></g><g><title>CoreFoundation`_CFRelease (102 samples, 1.55%)</title><rect x="97.1250%" y="245" width="1.5516%" height="15" fill="rgb(216,222,40)"/><text x="97.3750%" y="255.50"></text></g><g><title>IOAccelerator`ioAccelResourceFinalize (102 samples, 1.55%)</title><rect x="97.1250%" y="229" width="1.5516%" height="15" fill="rgb(234,217,39)"/><text x="97.3750%" y="239.50"></text></g><g><title>IOKit`IOConnectCallMethod (101 samples, 1.54%)</title><rect x="97.1402%" y="213" width="1.5364%" height="15" fill="rgb(207,178,40)"/><text x="97.3902%" y="223.50"></text></g><g><title>manim_rs`manim_rs::app::view (6,244 samples, 94.98%)</title><rect x="3.8181%" y="405" width="94.9802%" height="15" fill="rgb(221,136,13)"/><text x="4.0681%" y="415.50">manim_rs`manim_rs::app::view</text></g><g><title>manim_rs`nannou::frame::Frame::submit_inner (113 samples, 1.72%)</title><rect x="97.0794%" y="389" width="1.7189%" height="15" fill="rgb(249,199,10)"/><text x="97.3294%" y="399.50"></text></g><g><title>manim_rs`&lt;alloc::vec::Vec&lt;manim_rs::animation::command::TimedCommand&gt; as manim_rs::animation::command::Commands&gt;::process (10 samples, 0.15%)</title><rect x="98.7983%" y="373" width="0.1521%" height="15" fill="rgb(249,222,13)"/><text x="99.0483%" y="383.50"></text></g><g><title>manim_rs`nannou::app::apply_update (11 samples, 0.17%)</title><rect x="98.7983%" y="405" width="0.1673%" height="15" fill="rgb(244,185,38)"/><text x="99.0483%" y="415.50"></text></g><g><title>manim_rs`manim_rs::app::update (11 samples, 0.17%)</title><rect x="98.7983%" y="389" width="0.1673%" height="15" fill="rgb(236,202,9)"/><text x="99.0483%" y="399.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (6,282 samples, 95.56%)</title><rect x="3.5138%" y="501" width="95.5583%" height="15" fill="rgb(250,229,37)"/><text x="3.7638%" y="511.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (6,282 samples, 95.56%)</title><rect x="3.5138%" y="485" width="95.5583%" height="15" fill="rgb(206,174,23)"/><text x="3.7638%" y="495.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>manim_rs`winit::platform_impl::platform::app_state::AppState::cleared (6,263 samples, 95.27%)</title><rect x="3.8029%" y="469" width="95.2692%" height="15" fill="rgb(211,33,43)"/><text x="4.0529%" y="479.50">manim_rs`winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>manim_rs`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (6,263 samples, 95.27%)</title><rect x="3.8029%" y="453" width="95.2692%" height="15" fill="rgb(245,58,50)"/><text x="4.0529%" y="463.50">manim_rs`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>manim_rs`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (6,263 samples, 95.27%)</title><rect x="3.8029%" y="437" width="95.2692%" height="15" fill="rgb(244,68,36)"/><text x="4.0529%" y="447.50">manim_rs`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event</text></g><g><title>manim_rs`nannou::app::run_loop::_{{closure}} (6,263 samples, 95.27%)</title><rect x="3.8029%" y="421" width="95.2692%" height="15" fill="rgb(232,229,15)"/><text x="4.0529%" y="431.50">manim_rs`nannou::app::run_loop::_{{closure}}</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (6,315 samples, 96.06%)</title><rect x="3.3922%" y="533" width="96.0602%" height="15" fill="rgb(254,30,23)"/><text x="3.6422%" y="543.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>CoreFoundation`__CFRunLoopRun (6,314 samples, 96.05%)</title><rect x="3.4074%" y="517" width="96.0450%" height="15" fill="rgb(235,160,14)"/><text x="3.6574%" y="527.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (25 samples, 0.38%)</title><rect x="99.0721%" y="501" width="0.3803%" height="15" fill="rgb(212,155,44)"/><text x="99.3221%" y="511.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (25 samples, 0.38%)</title><rect x="99.0721%" y="485" width="0.3803%" height="15" fill="rgb(226,2,50)"/><text x="99.3221%" y="495.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (6,346 samples, 96.53%)</title><rect x="2.9814%" y="613" width="96.5318%" height="15" fill="rgb(234,177,6)"/><text x="3.2314%" y="623.50">AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>AppKit`_DPSNextEvent (6,341 samples, 96.46%)</title><rect x="3.0575%" y="597" width="96.4557%" height="15" fill="rgb(217,24,9)"/><text x="3.3075%" y="607.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (6,339 samples, 96.43%)</title><rect x="3.0879%" y="581" width="96.4253%" height="15" fill="rgb(220,13,46)"/><text x="3.3379%" y="591.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (6,339 samples, 96.43%)</title><rect x="3.0879%" y="565" width="96.4253%" height="15" fill="rgb(239,221,27)"/><text x="3.3379%" y="575.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (6,319 samples, 96.12%)</title><rect x="3.3922%" y="549" width="96.1211%" height="15" fill="rgb(222,198,25)"/><text x="3.6422%" y="559.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>AppKit`-[NSApplication run] (6,348 samples, 96.56%)</title><rect x="2.9814%" y="629" width="96.5622%" height="15" fill="rgb(211,99,13)"/><text x="3.2314%" y="639.50">AppKit`-[NSApplication run]</text></g><g><title>manim_rs`std::process::exit (8 samples, 0.12%)</title><rect x="99.5437%" y="629" width="0.1217%" height="15" fill="rgb(232,111,31)"/><text x="99.7937%" y="639.50"></text></g><g><title>manim_rs`std::sys::unix::os::exit (8 samples, 0.12%)</title><rect x="99.5437%" y="613" width="0.1217%" height="15" fill="rgb(245,82,37)"/><text x="99.7937%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`__exit (8 samples, 0.12%)</title><rect x="99.5437%" y="597" width="0.1217%" height="15" fill="rgb(227,149,46)"/><text x="99.7937%" y="607.50"></text></g><g><title>manim_rs`winit::event_loop::EventLoop&lt;T&gt;::run (6,360 samples, 96.74%)</title><rect x="2.9814%" y="661" width="96.7448%" height="15" fill="rgb(218,36,50)"/><text x="3.2314%" y="671.50">manim_rs`winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>manim_rs`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (6,360 samples, 96.74%)</title><rect x="2.9814%" y="645" width="96.7448%" height="15" fill="rgb(226,80,48)"/><text x="3.2314%" y="655.50">manim_rs`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>AppKit`+[NSApplication sharedApplication] (13 samples, 0.20%)</title><rect x="99.7262%" y="645" width="0.1977%" height="15" fill="rgb(238,224,15)"/><text x="99.9762%" y="655.50"></text></g><g><title>AppKit`-[NSApplication init] (13 samples, 0.20%)</title><rect x="99.7262%" y="629" width="0.1977%" height="15" fill="rgb(241,136,10)"/><text x="99.9762%" y="639.50"></text></g><g><title>all (6,574 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(208,32,45)"/><text x="0.2500%" y="799.50"></text></g><g><title>manim_rs`0x1 (6,415 samples, 97.58%)</title><rect x="2.4186%" y="773" width="97.5814%" height="15" fill="rgb(207,135,9)"/><text x="2.6686%" y="783.50">manim_rs`0x1</text></g><g><title>libdyld.dylib`start (6,415 samples, 97.58%)</title><rect x="2.4186%" y="757" width="97.5814%" height="15" fill="rgb(206,86,44)"/><text x="2.6686%" y="767.50">libdyld.dylib`start</text></g><g><title>manim_rs`main (6,415 samples, 97.58%)</title><rect x="2.4186%" y="741" width="97.5814%" height="15" fill="rgb(245,177,15)"/><text x="2.6686%" y="751.50">manim_rs`main</text></g><g><title>manim_rs`std::rt::lang_start_internal (6,415 samples, 97.58%)</title><rect x="2.4186%" y="725" width="97.5814%" height="15" fill="rgb(206,64,50)"/><text x="2.6686%" y="735.50">manim_rs`std::rt::lang_start_internal</text></g><g><title>manim_rs`std::rt::lang_start::_{{closure}} (6,415 samples, 97.58%)</title><rect x="2.4186%" y="709" width="97.5814%" height="15" fill="rgb(234,36,40)"/><text x="2.6686%" y="719.50">manim_rs`std::rt::lang_start::_{{closure}}</text></g><g><title>manim_rs`manim_rs::main (6,415 samples, 97.58%)</title><rect x="2.4186%" y="693" width="97.5814%" height="15" fill="rgb(213,64,8)"/><text x="2.6686%" y="703.50">manim_rs`manim_rs::main</text></g><g><title>manim_rs`nannou::app::Builder&lt;M,E&gt;::run (6,415 samples, 97.58%)</title><rect x="2.4186%" y="677" width="97.5814%" height="15" fill="rgb(210,75,36)"/><text x="2.6686%" y="687.50">manim_rs`nannou::app::Builder&lt;M,E&gt;::run</text></g><g><title>manim_rs`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (18 samples, 0.27%)</title><rect x="99.7262%" y="661" width="0.2738%" height="15" fill="rgb(229,88,21)"/><text x="99.9762%" y="671.50"></text></g></svg></svg>